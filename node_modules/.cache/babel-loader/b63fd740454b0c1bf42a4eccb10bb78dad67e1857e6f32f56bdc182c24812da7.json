{"ast":null,"code":"export default {\n  name: \"slideView\",\n  mounted() {\n    this.dragControllerDiv();\n  },\n  methods: {\n    dragControllerDiv() {\n      var resize = document.getElementsByClassName('resize');\n      var left = document.getElementsByClassName('left');\n      var mid = document.getElementsByClassName('mid');\n      var box = document.getElementsByClassName('box');\n      for (let i = 0; i < resize.length; i++) {\n        // 鼠标按下事件\n        resize[i].onmousedown = function (e) {\n          //颜色改变提醒\n          resize[i].style.background = '#818181';\n          var startX = e.clientX;\n          resize[i].left = resize[i].offsetLeft;\n          // 鼠标拖动事件\n          document.onmousemove = function (e) {\n            var endX = e.clientX;\n            var moveLen = resize[i].left + (endX - startX); // （endx-startx）=移动的距离。resize[i].left+移动的距离=左边区域最后的宽度\n            var maxT = box[i].clientWidth - resize[i].offsetWidth; // 容器宽度 - 左边区域的宽度 = 右边区域的宽度\n\n            if (moveLen < 32) moveLen = 32; // 左边区域的最小宽度为32px\n            if (moveLen > maxT - 150) moveLen = maxT - 150; //右边区域最小宽度为150px\n\n            resize[i].style.left = moveLen; // 设置左侧区域的宽度\n\n            for (let j = 0; j < left.length; j++) {\n              left[j].style.width = moveLen + 'px';\n              mid[j].style.width = box[i].clientWidth - moveLen - 10 + 'px';\n            }\n          };\n          // 鼠标松开事件\n          document.onmouseup = function () {\n            //颜色恢复\n            resize[i].style.background = '#d6d6d6';\n            document.onmousemove = null;\n            document.onmouseup = null;\n            resize[i].releaseCapture && resize[i].releaseCapture(); //当你不在需要继续获得鼠标消息就要应该调用ReleaseCapture()释放掉\n          };\n\n          resize[i].setCapture && resize[i].setCapture(); //该函数在属于当前线程的指定窗口里设置鼠标捕获\n          return false;\n        };\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","mounted","dragControllerDiv","methods","resize","document","getElementsByClassName","left","mid","box","i","length","onmousedown","e","style","background","startX","clientX","offsetLeft","onmousemove","endX","moveLen","maxT","clientWidth","offsetWidth","j","width","onmouseup","releaseCapture","setCapture"],"sources":["src/views/slideView.vue"],"sourcesContent":["<template>\n  <div style=\"height: 1000px\">\n    <!-- vue实现拖动调整左右两侧容器大小 -->\n    <div class=\"box\" ref=\"box\">\n      <div class=\"left\">\n        <!--左侧div内容-->\n      </div>\n      <div class=\"resize\" title=\"收缩侧边栏\">\n        ⋮\n      </div>\n      <div class=\"mid\">\n        <!--右侧div内容-->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default ({\n  name: \"slideView\",\n  mounted() {\n    this.dragControllerDiv();\n  },\n  methods: {\n    dragControllerDiv () {\n      var resize = document.getElementsByClassName('resize');\n      var left = document.getElementsByClassName('left');\n      var mid = document.getElementsByClassName('mid');\n      var box = document.getElementsByClassName('box');\n      for (let i = 0; i < resize.length; i++) {\n        // 鼠标按下事件\n        resize[i].onmousedown = function (e) {\n          //颜色改变提醒\n          resize[i].style.background = '#818181';\n          var startX = e.clientX;\n          resize[i].left = resize[i].offsetLeft;\n          // 鼠标拖动事件\n          document.onmousemove = function (e) {\n            var endX = e.clientX;\n            var moveLen = resize[i].left + (endX - startX); // （endx-startx）=移动的距离。resize[i].left+移动的距离=左边区域最后的宽度\n            var maxT = box[i].clientWidth - resize[i].offsetWidth; // 容器宽度 - 左边区域的宽度 = 右边区域的宽度\n\n            if (moveLen < 32) moveLen = 32; // 左边区域的最小宽度为32px\n            if (moveLen > maxT - 150) moveLen = maxT - 150; //右边区域最小宽度为150px\n\n            resize[i].style.left = moveLen; // 设置左侧区域的宽度\n\n            for (let j = 0; j < left.length; j++) {\n              left[j].style.width = moveLen + 'px';\n              mid[j].style.width = (box[i].clientWidth - moveLen - 10) + 'px';\n            }\n          };\n          // 鼠标松开事件\n          document.onmouseup = function () {\n            //颜色恢复\n            resize[i].style.background = '#d6d6d6';\n            document.onmousemove = null;\n            document.onmouseup = null;\n            resize[i].releaseCapture && resize[i].releaseCapture(); //当你不在需要继续获得鼠标消息就要应该调用ReleaseCapture()释放掉\n          };\n          resize[i].setCapture && resize[i].setCapture(); //该函数在属于当前线程的指定窗口里设置鼠标捕获\n          return false;\n        };\n      }\n    },\n  }\n})\n</script>\n<style scoped>\n/* 拖拽相关样式 */\n/*包围div样式*/\n.box {\n  width: 100%;\n  height: 100%;\n  margin: 1% 0px;\n  overflow: hidden;\n  box-shadow: -1px 9px 10px 3px rgba(0, 0, 0, 0.11);\n}\n\n/*左侧div样式*/\n.left {\n  width: calc(32% - 10px);\n  /*左侧初始化宽度*/\n  height: 100%;\n  background: #FFFFFF;\n  float: left;\n}\n\n/*拖拽区div样式*/\n.resize {\n  cursor: col-resize;\n  float: left;\n  position: relative;\n  top: 45%;\n  background-color: #d6d6d6;\n  border-radius: 5px;\n  margin-top: -10px;\n  width: 10px;\n  height: 50px;\n  background-size: cover;\n  background-position: center;\n  /*z-index: 99999;*/\n  font-size: 32px;\n  color: white;\n}\n\n/*拖拽区鼠标悬停样式*/\n.resize:hover {\n  color: #444444;\n}\n\n/*右侧div'样式*/\n.mid {\n  float: left;\n  width: 68%;\n  /*右侧初始化宽度*/\n  height: 100%;\n  background: red;\n  /* box-shadow: -1px 4px 5px 3px rgba(0, 0, 0, 0.11); */\n}</style>"],"mappings":"AAkBA;EACAA,IAAA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACAD,kBAAA;MACA,IAAAE,MAAA,GAAAC,QAAA,CAAAC,sBAAA;MACA,IAAAC,IAAA,GAAAF,QAAA,CAAAC,sBAAA;MACA,IAAAE,GAAA,GAAAH,QAAA,CAAAC,sBAAA;MACA,IAAAG,GAAA,GAAAJ,QAAA,CAAAC,sBAAA;MACA,SAAAI,CAAA,MAAAA,CAAA,GAAAN,MAAA,CAAAO,MAAA,EAAAD,CAAA;QACA;QACAN,MAAA,CAAAM,CAAA,EAAAE,WAAA,aAAAC,CAAA;UACA;UACAT,MAAA,CAAAM,CAAA,EAAAI,KAAA,CAAAC,UAAA;UACA,IAAAC,MAAA,GAAAH,CAAA,CAAAI,OAAA;UACAb,MAAA,CAAAM,CAAA,EAAAH,IAAA,GAAAH,MAAA,CAAAM,CAAA,EAAAQ,UAAA;UACA;UACAb,QAAA,CAAAc,WAAA,aAAAN,CAAA;YACA,IAAAO,IAAA,GAAAP,CAAA,CAAAI,OAAA;YACA,IAAAI,OAAA,GAAAjB,MAAA,CAAAM,CAAA,EAAAH,IAAA,IAAAa,IAAA,GAAAJ,MAAA;YACA,IAAAM,IAAA,GAAAb,GAAA,CAAAC,CAAA,EAAAa,WAAA,GAAAnB,MAAA,CAAAM,CAAA,EAAAc,WAAA;;YAEA,IAAAH,OAAA,OAAAA,OAAA;YACA,IAAAA,OAAA,GAAAC,IAAA,QAAAD,OAAA,GAAAC,IAAA;;YAEAlB,MAAA,CAAAM,CAAA,EAAAI,KAAA,CAAAP,IAAA,GAAAc,OAAA;;YAEA,SAAAI,CAAA,MAAAA,CAAA,GAAAlB,IAAA,CAAAI,MAAA,EAAAc,CAAA;cACAlB,IAAA,CAAAkB,CAAA,EAAAX,KAAA,CAAAY,KAAA,GAAAL,OAAA;cACAb,GAAA,CAAAiB,CAAA,EAAAX,KAAA,CAAAY,KAAA,GAAAjB,GAAA,CAAAC,CAAA,EAAAa,WAAA,GAAAF,OAAA;YACA;UACA;UACA;UACAhB,QAAA,CAAAsB,SAAA;YACA;YACAvB,MAAA,CAAAM,CAAA,EAAAI,KAAA,CAAAC,UAAA;YACAV,QAAA,CAAAc,WAAA;YACAd,QAAA,CAAAsB,SAAA;YACAvB,MAAA,CAAAM,CAAA,EAAAkB,cAAA,IAAAxB,MAAA,CAAAM,CAAA,EAAAkB,cAAA;UACA;;UACAxB,MAAA,CAAAM,CAAA,EAAAmB,UAAA,IAAAzB,MAAA,CAAAM,CAAA,EAAAmB,UAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}