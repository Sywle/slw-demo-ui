{"ast":null,"code":"// @ is an alias to /src\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      unlinkPanels: false,\n      createForm: {\n        timeCycle: []\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '今天',\n          onClick(picker) {\n            picker.$emit('pick', [new Date(), new Date()]);\n          }\n        }, {\n          text: '昨天',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', [date, date]);\n          }\n        }, {\n          text: '近7天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '近30天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '近90天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '近180天',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 180);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '近一年',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 365);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '本周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            //现在星期几；0代表星期天，6代表星期六\n            var thisDay = start.getDay();\n            //现在是一个月的第几天\n            var thisDate = start.getDate();\n            console.log(thisDay);\n            console.log(thisDate);\n            if (thisDay != 0) {\n              start.setDate(thisDate - thisDay + 1);\n            }\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '本月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            end.setTime(start.getTime() - 3600 * 1000 * 24);\n            start.setDate(1);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '本季度',\n          onClick(picker) {\n            var oDate = new Date();\n            var thisYear = oDate.getFullYear();\n            var thisMonth = oDate.getMonth() + 1;\n            var n = Math.ceil(thisMonth / 3); // 季度\n            var Month = n * 3 - 1;\n            var start = new Date(thisYear, Month - 2, 1);\n            var end = new Date();\n            end.setTime(end.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '本年',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setMonth(0);\n            start.setDate(1);\n            end.setTime(end.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      repeat: [{\n        label: '章三',\n        value: '1'\n      }, {\n        label: '章三',\n        value: '1'\n      }, {\n        label: '李四',\n        value: '2'\n      }, {\n        label: '王五',\n        value: '3'\n      }],\n      ruleForm: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入活动名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 5,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }],\n        region: [{\n          required: true,\n          message: '请选择活动区域',\n          trigger: 'change'\n        }],\n        date1: [{\n          type: 'date',\n          required: true,\n          message: '请选择日期',\n          trigger: 'change'\n        }],\n        date2: [{\n          type: 'date',\n          required: true,\n          message: '请选择时间',\n          trigger: 'change'\n        }],\n        type: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个活动性质',\n          trigger: 'change'\n        }],\n        resource: [{\n          required: true,\n          message: '请选择活动资源',\n          trigger: 'change'\n        }],\n        desc: [{\n          required: true,\n          message: '请填写活动形式',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    const unique = [...new Set(this.repeat.map(item => JSON.stringify(item)))].map(item => JSON.parse(item));\n    console.log(unique);\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","data","unlinkPanels","createForm","timeCycle","pickerOptions","shortcuts","text","onClick","picker","$emit","Date","date","setTime","getTime","end","start","thisDay","getDay","thisDate","getDate","console","log","setDate","oDate","thisYear","getFullYear","thisMonth","getMonth","n","Math","ceil","Month","setMonth","repeat","label","value","ruleForm","region","date1","date2","delivery","type","resource","desc","rules","required","message","trigger","min","max","created","unique","Set","map","item","JSON","stringify","parse","methods","submitForm","formName","$refs","validate","valid","alert","resetForm","resetFields"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h2>{{ createForm.timeCycle }}</h2>\n    <el-date-picker\n    v-model=\"createForm.timeCycle\"\n    :unlink-panels=\"unlinkPanels\"\n    type=\"monthrange\"\n    :picker-options=\"pickerOptions\"\n    range-separator=\"至\" \n    start-placeholder=\"开始日期\"\n    end-placeholder=\"结束日期\"\n    value-format=\"yyyy-MM-dd\"\n>\n</el-date-picker>\n<el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n  <el-form-item label=\"活动名称\" :prop=\"unlinkPanels ? 'name' : ''\">\n    <el-input v-model=\"ruleForm.name\"></el-input>\n  </el-form-item>\n  <el-form-item label=\"活动区域\" prop=\"region\">\n    <el-select v-model=\"ruleForm.region\" placeholder=\"请选择活动区域\">\n      <el-option label=\"区域一\" value=\"shanghai\"></el-option>\n      <el-option label=\"区域二\" value=\"beijing\"></el-option>\n    </el-select>\n  </el-form-item>\n  <el-form-item label=\"活动时间\" required>\n    <el-col :span=\"11\">\n      <el-form-item prop=\"date1\">\n        <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"ruleForm.date1\" style=\"width: 100%;\"></el-date-picker>\n      </el-form-item>\n    </el-col>\n    <el-col class=\"line\" :span=\"2\">-</el-col>\n    <el-col :span=\"11\">\n      <el-form-item prop=\"date2\">\n        <el-time-picker placeholder=\"选择时间\" v-model=\"ruleForm.date2\" style=\"width: 100%;\"></el-time-picker>\n      </el-form-item>\n    </el-col>\n  </el-form-item>\n  <el-form-item label=\"即时配送\" prop=\"delivery\">\n    <el-switch v-model=\"ruleForm.delivery\"></el-switch>\n  </el-form-item>\n  <el-form-item label=\"活动性质\" prop=\"type\">\n    <el-checkbox-group v-model=\"ruleForm.type\">\n      <el-checkbox label=\"美食/餐厅线上活动\" name=\"type\"></el-checkbox>\n      <el-checkbox label=\"地推活动\" name=\"type\"></el-checkbox>\n      <el-checkbox label=\"线下主题活动\" name=\"type\"></el-checkbox>\n      <el-checkbox label=\"单纯品牌曝光\" name=\"type\"></el-checkbox>\n    </el-checkbox-group>\n  </el-form-item>\n  <el-form-item label=\"特殊资源\" prop=\"resource\">\n    <el-radio-group v-model=\"ruleForm.resource\">\n      <el-radio label=\"线上品牌商赞助\"></el-radio>\n      <el-radio label=\"线下场地免费\"></el-radio>\n    </el-radio-group>\n  </el-form-item>\n  <el-form-item label=\"活动形式\" prop=\"desc\">\n    <el-input type=\"textarea\" v-model=\"ruleForm.desc\"></el-input>\n  </el-form-item>\n  <el-form-item>\n    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\n    <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n  </el-form-item>\n</el-form>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nexport default {\n  name: 'HomeView',\n    data(){\n      return {\n        unlinkPanels: false,\n        createForm: {\n          timeCycle:[]\n        },\n        pickerOptions: {\n          shortcuts: [{\n            text: '今天',\n            onClick(picker) {\n              picker.$emit('pick', [new Date(), new Date()]);\n            }\n          }, {\n            text: '昨天',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24);\n              picker.$emit('pick', [date,date]);\n            }\n          }, \n            {\n            text: '近7天',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              end.setTime(start.getTime() - 3600 * 1000 * 24 )\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit('pick', [start, end]);\n            }\n          }, {\n            text: '近30天',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              end.setTime(start.getTime() - 3600 * 1000 * 24 )\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit('pick', [start, end]);\n            }\n          }, {\n            text: '近90天',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              end.setTime(start.getTime() - 3600 * 1000 * 24 )\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit('pick', [start, end]);\n            },\n          },\n           {\n            text: '近180天',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              end.setTime(start.getTime() - 3600 * 1000 * 24 )\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 180);\n              picker.$emit('pick', [start, end]);\n            },\n          },\n          {\n            text: '近一年',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              end.setTime(start.getTime() - 3600 * 1000 * 24 )\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 365);\n              picker.$emit('pick', [start, end]);\n            },\n          },\n          {text: '本周',\n              onClick(picker) {\n                 const end = new Date();\n                 const start = new Date();\n                 end.setTime(start.getTime() - 3600 * 1000 * 24 )\n                 //现在星期几；0代表星期天，6代表星期六\n                 var thisDay = start.getDay();\n                 //现在是一个月的第几天\n                 var thisDate = start.getDate();\n                 console.log(thisDay)\n                 console.log(thisDate)\n                 if (thisDay != 0) {\n                     start.setDate(thisDate - thisDay+1);\n                 }\n                   picker.$emit('pick', [start, end]);\n              }\n           },\n           {\n              text: '本月',\n              onClick(picker) {\n                  const end = new Date();\n                  const start = new Date();\n                  end.setTime(start.getTime() - 3600 * 1000 * 24 )\n                  start.setDate(1);\n                  picker.$emit('pick', [start, end]);\n              }\n            },\n            {\n              text: '本季度',\n              onClick(picker) {\n                  var oDate = new Date();\n                  var thisYear = oDate.getFullYear();\n                  var thisMonth = oDate.getMonth() + 1;\n                  var n = Math.ceil(thisMonth / 3); // 季度\n                  var Month = n * 3 - 1;\n                  var start = new Date(thisYear, Month - 2, 1);\n                  var end = new Date();\n                  end.setTime(end.getTime() - 3600 * 1000 * 24 )\n                  picker.$emit('pick', [start, end]);\n            }\n          },\n          {\n              text: '本年',\n              onClick(picker) {\n                  const end = new Date();\n                  const start = new Date();\n                  start.setMonth(0);\n                  start.setDate(1);\n                  end.setTime(end.getTime() - 3600 * 1000 * 24 )\n                  picker.$emit('pick', [start, end]);\n              }\n          }, \n          ]\n        },\n        repeat: [\n          {\n            label: '章三',\n            value: '1'\n          },\n          {\n            label: '章三',\n            value: '1'\n          },\n          {\n            label: '李四',\n            value: '2'\n          },\n          {\n            label: '王五',\n            value: '3'\n          }\n        ],\n        ruleForm: {\n          name: '',\n          region: '',\n          date1: '',\n          date2: '',\n          delivery: false,\n          type: [],\n          resource: '',\n          desc: ''\n        },\n        rules: {\n          name: [\n            { required: true, message: '请输入活动名称', trigger: 'blur' },\n            { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n          ],\n          region: [\n            { required: true, message: '请选择活动区域', trigger: 'change' }\n          ],\n          date1: [\n            { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\n          ],\n          date2: [\n            { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n          ],\n          type: [\n            { type: 'array', required: true, message: '请至少选择一个活动性质', trigger: 'change' }\n          ],\n          resource: [\n            { required: true, message: '请选择活动资源', trigger: 'change' }\n          ],\n          desc: [\n            { required: true, message: '请填写活动形式', trigger: 'blur' }\n          ]\n        }\n      }\n    },\n    created() {\n      const unique = [...new Set(this.repeat.map(item => JSON.stringify(item)))].map(item => JSON.parse(item))\n      console.log(unique);\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}