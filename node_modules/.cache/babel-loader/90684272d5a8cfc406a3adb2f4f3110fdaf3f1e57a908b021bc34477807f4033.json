{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"baiduMap\",\n  data() {\n    return {\n      map: null,\n      kmlLayer: null,\n      object: {\n        lng: 114.03807,\n        lat: 34.7518\n      },\n      xPi: 3.14159265358979324 * 3000.0 / 180.0,\n      pi: 3.1415926535897932384626,\n      a: 6378245.0,\n      ee: 0.00669342162296594323\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      this.map = new BMapGL.Map(this.$refs.mapContainer);\n      this.map.centerAndZoom(new BMapGL.Point(114.016, 34.758), 14);\n      this.map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放\n      // 创建 BMapGL.KMLLayer 实例\n      const kmlString = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\n  <Document id=\"root_doc\">\n    <Document id=\"______\">\n      <name>乡镇</name>\n      <Placemark id=\"______.1\">\n        <name>青年路街道</name>\n        <Polygon>\n          <outerBoundaryIs>\n            <LinearRing>\n              <coordinates>\n                114.01395048662,34.7584291986628,0\n                114.014492486943,34.7583002003184,0\n                114.016718487064,34.7597171820816,0\n                114.017441486239,34.7601771757711,0\n                114.018993486691,34.7599951786064,0\n                114.02219648643,34.7596191829986,0\n                114.023904486518,34.7594181859161,0\n                114.024218486337,34.7593811863227,0\n                114.027500486617,34.7560732291729,0\n                114.035256486882,34.7535282616835,0\n                114.039579486354,34.7489693206875,0\n                114.042111486797,34.7462983553593,0\n                114.043762486983,34.7445563779028,0\n                114.045078486535,34.743168395885,0\n                114.044767487089,34.734762503953,0\n                114.041846486483,34.7335345198359,0\n                114.042858486262,34.7314785465701,0\n                114.045495486287,34.7261186153187,0\n                114.045711487095,34.72601561639,0\n                114.047642486765,34.7228016584122,0\n                114.050439486624,34.71814371788,0\n                114.042327486707,34.7182087169345,0\n                114.041598486786,34.7182957160094,0\n                114.028672486229,34.7198276966539,0\n                114.028629486572,34.7198326961403,0\n                114.025702487017,34.7201786922105,0\n                114.025686486225,34.7201806917013,0\n                114.022079486254,34.7206066862466,0\n                114.022005486635,34.7206156861233,0\n                114.017814486508,34.721109679575,0\n                114.017499486864,34.7211476790626,0\n                114.017286486428,34.7211726790463,0\n                114.013511486228,34.721617673652,0\n                114.013155486576,34.7216596725546,0\n                114.011570486513,34.7219386691532,0\n                114.0112404868,34.721997668361,0\n                114.00289648708,34.7234686493393,0\n                114.002704486561,34.7235016492167,0\n                113.998179486523,34.7242996390206,0\n                113.997939486324,34.7243416380374,0\n                113.997812487001,34.7243646376658,0\n                113.99626948677,34.7236716469224,0\n                113.994621486957,34.7229326562424,0\n                113.984511486525,34.7183947151509,0\n                113.983464486587,34.718367715531,0\n                113.983691486367,34.7246686343994,0\n                113.983852486924,34.7247686329835,0\n                113.991671486937,34.7296395700929,0\n                113.991723486816,34.7296725697219,0\n                113.990431486655,34.7301315635296,0\n                113.996888487086,34.7349535011479,0\n                113.996847487078,34.7353864962269,0\n                113.996322486473,34.7410054235198,0\n                113.994577486576,34.7434153923917,0\n                113.994226486947,34.7481693311199,0\n                113.993547486356,34.7481653312782,0\n                113.993988486397,34.7488213226776,0\n                113.993789487104,34.7505513003226,0\n                113.990463486442,34.7534492627011,0\n                113.988714486347,34.7549742430194,0\n                113.990274486296,34.7577942066862,0\n                113.990955486537,34.7590241911295,0\n                113.994212486703,34.7621901503032,0\n                113.996867486271,34.762907141185,0\n                113.997914487108,34.7631891371523,0\n                114.003768487116,34.7625441459158,0\n                114.005216486912,34.7623841474697,0\n                114.008523486409,34.7597241821171,0\n                114.01395048662,34.7584291986628,0\n              </coordinates>\n            </LinearRing>\n          </outerBoundaryIs>\n        </Polygon>\n      </Placemark>\n    </Document>\n  </Document>\n</kml>`;\n      var parser = new DOMParser();\n      var kml = parser.parseFromString(kmlString, 'text/xml');\n      console.log(kml);\n      // 获取多边形经纬度数据\n      var coordinatesRaw = kml.getElementsByTagName('coordinates')[0].textContent.trim();\n      var coordinatesArray = coordinatesRaw.split('\\n');\n      console.log(coordinatesRaw);\n      var coordinates = [];\n      for (var i = 0; i < coordinatesArray.length; i++) {\n        var coordinateRaw = coordinatesArray[i].trim().split(',');\n        var coordinate = this.gcj02tobd09({\n          lng: parseFloat(coordinateRaw[0]),\n          lat: parseFloat(coordinateRaw[1])\n        });\n        coordinates.push(coordinate);\n      }\n      console.log(coordinates);\n      var lineArray = []; // 面的点的集合\n      coordinates.forEach(item => {\n        lineArray.push(new BMapGL.Point(item.lng, item.lat));\n      });\n      var polygon = new BMapGL.Polygon(lineArray, {\n        strokeColor: 'red',\n        fillColor: 'red',\n        strokeWeight: 3,\n        strokeOpacity: 0.3,\n        fillOpacity: 0.2\n      });\n      this.map.addOverlay(polygon);\n    },\n    // 火星转百度\n    gcj02tobd09(val) {\n      let z = Math.sqrt(val.lng * val.lng + val.lat * val.lat) + 0.00002 * Math.sin(val.lat * this.xPi);\n      let theta = Math.atan2(val.lat, val.lng) + 0.000003 * Math.cos(val.lng * this.xPi);\n      let BaiduCor = {};\n      BaiduCor.lng = z * Math.cos(theta) + 0.0065;\n      BaiduCor.lat = z * Math.sin(theta) + 0.006;\n      return BaiduCor;\n    }\n  }\n};","map":{"version":3,"names":["name","data","map","kmlLayer","object","lng","lat","xPi","pi","a","ee","mounted","initMap","methods","BMapGL","Map","$refs","mapContainer","centerAndZoom","Point","enableScrollWheelZoom","kmlString","parser","DOMParser","kml","parseFromString","console","log","coordinatesRaw","getElementsByTagName","textContent","trim","coordinatesArray","split","coordinates","i","length","coordinateRaw","coordinate","gcj02tobd09","parseFloat","push","lineArray","forEach","item","polygon","Polygon","strokeColor","fillColor","strokeWeight","strokeOpacity","fillOpacity","addOverlay","val","z","Math","sqrt","sin","theta","atan2","cos","BaiduCor"],"sources":["src/views/baiduMap.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"mapContainer\" class=\"map-container\"></div>\n  </div>\n</template>\n<script>\n  export default ({\n    name: \"baiduMap\",\n    data() {\n      return {\n        map: null,\n        kmlLayer: null,\n        object: {\n          lng: 114.03807,\n          lat: 34.7518\n        },\n        xPi: 3.14159265358979324 * 3000.0 / 180.0,\n        pi: 3.1415926535897932384626,\n        a: 6378245.0,\n        ee: 0.00669342162296594323\n      }\n    },\n    mounted() {\n      this.initMap();\n    },\n    methods: {\n      initMap() {\n        this.map = new BMapGL.Map(this.$refs.mapContainer);\n        this.map.centerAndZoom(new BMapGL.Point(114.016, 34.758), 14);\n        this.map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放\n        // 创建 BMapGL.KMLLayer 实例\n        const kmlString = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\n  <Document id=\"root_doc\">\n    <Document id=\"______\">\n      <name>乡镇</name>\n      <Placemark id=\"______.1\">\n        <name>青年路街道</name>\n        <Polygon>\n          <outerBoundaryIs>\n            <LinearRing>\n              <coordinates>\n                114.01395048662,34.7584291986628,0\n                114.014492486943,34.7583002003184,0\n                114.016718487064,34.7597171820816,0\n                114.017441486239,34.7601771757711,0\n                114.018993486691,34.7599951786064,0\n                114.02219648643,34.7596191829986,0\n                114.023904486518,34.7594181859161,0\n                114.024218486337,34.7593811863227,0\n                114.027500486617,34.7560732291729,0\n                114.035256486882,34.7535282616835,0\n                114.039579486354,34.7489693206875,0\n                114.042111486797,34.7462983553593,0\n                114.043762486983,34.7445563779028,0\n                114.045078486535,34.743168395885,0\n                114.044767487089,34.734762503953,0\n                114.041846486483,34.7335345198359,0\n                114.042858486262,34.7314785465701,0\n                114.045495486287,34.7261186153187,0\n                114.045711487095,34.72601561639,0\n                114.047642486765,34.7228016584122,0\n                114.050439486624,34.71814371788,0\n                114.042327486707,34.7182087169345,0\n                114.041598486786,34.7182957160094,0\n                114.028672486229,34.7198276966539,0\n                114.028629486572,34.7198326961403,0\n                114.025702487017,34.7201786922105,0\n                114.025686486225,34.7201806917013,0\n                114.022079486254,34.7206066862466,0\n                114.022005486635,34.7206156861233,0\n                114.017814486508,34.721109679575,0\n                114.017499486864,34.7211476790626,0\n                114.017286486428,34.7211726790463,0\n                114.013511486228,34.721617673652,0\n                114.013155486576,34.7216596725546,0\n                114.011570486513,34.7219386691532,0\n                114.0112404868,34.721997668361,0\n                114.00289648708,34.7234686493393,0\n                114.002704486561,34.7235016492167,0\n                113.998179486523,34.7242996390206,0\n                113.997939486324,34.7243416380374,0\n                113.997812487001,34.7243646376658,0\n                113.99626948677,34.7236716469224,0\n                113.994621486957,34.7229326562424,0\n                113.984511486525,34.7183947151509,0\n                113.983464486587,34.718367715531,0\n                113.983691486367,34.7246686343994,0\n                113.983852486924,34.7247686329835,0\n                113.991671486937,34.7296395700929,0\n                113.991723486816,34.7296725697219,0\n                113.990431486655,34.7301315635296,0\n                113.996888487086,34.7349535011479,0\n                113.996847487078,34.7353864962269,0\n                113.996322486473,34.7410054235198,0\n                113.994577486576,34.7434153923917,0\n                113.994226486947,34.7481693311199,0\n                113.993547486356,34.7481653312782,0\n                113.993988486397,34.7488213226776,0\n                113.993789487104,34.7505513003226,0\n                113.990463486442,34.7534492627011,0\n                113.988714486347,34.7549742430194,0\n                113.990274486296,34.7577942066862,0\n                113.990955486537,34.7590241911295,0\n                113.994212486703,34.7621901503032,0\n                113.996867486271,34.762907141185,0\n                113.997914487108,34.7631891371523,0\n                114.003768487116,34.7625441459158,0\n                114.005216486912,34.7623841474697,0\n                114.008523486409,34.7597241821171,0\n                114.01395048662,34.7584291986628,0\n              </coordinates>\n            </LinearRing>\n          </outerBoundaryIs>\n        </Polygon>\n      </Placemark>\n    </Document>\n  </Document>\n</kml>`\n        var parser = new DOMParser();\n        var kml = parser.parseFromString(kmlString, 'text/xml');\n        console.log(kml);\n        // 获取多边形经纬度数据\n        var coordinatesRaw = kml.getElementsByTagName('coordinates')[0].textContent.trim();\n        var coordinatesArray = coordinatesRaw.split('\\n');\n        console.log(coordinatesRaw);\n        var coordinates = [];\n        for (var i = 0; i < coordinatesArray.length; i++) {\n          var coordinateRaw = coordinatesArray[i].trim().split(',');\n          var coordinate = this.gcj02tobd09({lng: parseFloat(coordinateRaw[0]), lat: parseFloat(coordinateRaw[1])});\n          coordinates.push(coordinate);\n        }\n        console.log(coordinates);\n        var lineArray = [] // 面的点的集合\n        coordinates.forEach(item => {\n            lineArray.push(new BMapGL.Point(item.lng, item.lat))\n        })\n        var polygon = new BMapGL.Polygon(lineArray, {\n          strokeColor: 'red',\n          fillColor: 'red',\n          strokeWeight: 3,\n          strokeOpacity: 0.3,\n          fillOpacity: 0.2,\n        });\n        this.map.addOverlay(polygon)\n      },\n      // 火星转百度\n      gcj02tobd09(val) {\n        let z = Math.sqrt(val.lng * val.lng + val.lat * val.lat) + 0.00002 * Math.sin(val.lat * this.xPi);\n        let theta = Math.atan2(val.lat, val.lng) + 0.000003 * Math.cos(val.lng * this.xPi);\n        let BaiduCor = {}\n        BaiduCor.lng = z * Math.cos(theta) + 0.0065;\n        BaiduCor.lat = z * Math.sin(theta) + 0.006;\n        return BaiduCor;\n      },\n    }\n  })\n</script>\n<style scoped>\n  .map {\n    height: 100%;\n  }\n  .map-container {\n    height: 100vh; \n  }\n</style>"],"mappings":";AAMA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,QAAA;MACAC,MAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,GAAA;MACAC,EAAA;MACAC,CAAA;MACAC,EAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAD,QAAA;MACA,KAAAV,GAAA,OAAAY,MAAA,CAAAC,GAAA,MAAAC,KAAA,CAAAC,YAAA;MACA,KAAAf,GAAA,CAAAgB,aAAA,KAAAJ,MAAA,CAAAK,KAAA;MACA,KAAAjB,GAAA,CAAAkB,qBAAA;MACA;MACA,MAAAC,SAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA,IAAAC,MAAA,OAAAC,SAAA;MACA,IAAAC,GAAA,GAAAF,MAAA,CAAAG,eAAA,CAAAJ,SAAA;MACAK,OAAA,CAAAC,GAAA,CAAAH,GAAA;MACA;MACA,IAAAI,cAAA,GAAAJ,GAAA,CAAAK,oBAAA,mBAAAC,WAAA,CAAAC,IAAA;MACA,IAAAC,gBAAA,GAAAJ,cAAA,CAAAK,KAAA;MACAP,OAAA,CAAAC,GAAA,CAAAC,cAAA;MACA,IAAAM,WAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAH,gBAAA,CAAAI,MAAA,EAAAD,CAAA;QACA,IAAAE,aAAA,GAAAL,gBAAA,CAAAG,CAAA,EAAAJ,IAAA,GAAAE,KAAA;QACA,IAAAK,UAAA,QAAAC,WAAA;UAAAlC,GAAA,EAAAmC,UAAA,CAAAH,aAAA;UAAA/B,GAAA,EAAAkC,UAAA,CAAAH,aAAA;QAAA;QACAH,WAAA,CAAAO,IAAA,CAAAH,UAAA;MACA;MACAZ,OAAA,CAAAC,GAAA,CAAAO,WAAA;MACA,IAAAQ,SAAA;MACAR,WAAA,CAAAS,OAAA,CAAAC,IAAA;QACAF,SAAA,CAAAD,IAAA,KAAA3B,MAAA,CAAAK,KAAA,CAAAyB,IAAA,CAAAvC,GAAA,EAAAuC,IAAA,CAAAtC,GAAA;MACA;MACA,IAAAuC,OAAA,OAAA/B,MAAA,CAAAgC,OAAA,CAAAJ,SAAA;QACAK,WAAA;QACAC,SAAA;QACAC,YAAA;QACAC,aAAA;QACAC,WAAA;MACA;MACA,KAAAjD,GAAA,CAAAkD,UAAA,CAAAP,OAAA;IACA;IACA;IACAN,YAAAc,GAAA;MACA,IAAAC,CAAA,GAAAC,IAAA,CAAAC,IAAA,CAAAH,GAAA,CAAAhD,GAAA,GAAAgD,GAAA,CAAAhD,GAAA,GAAAgD,GAAA,CAAA/C,GAAA,GAAA+C,GAAA,CAAA/C,GAAA,cAAAiD,IAAA,CAAAE,GAAA,CAAAJ,GAAA,CAAA/C,GAAA,QAAAC,GAAA;MACA,IAAAmD,KAAA,GAAAH,IAAA,CAAAI,KAAA,CAAAN,GAAA,CAAA/C,GAAA,EAAA+C,GAAA,CAAAhD,GAAA,eAAAkD,IAAA,CAAAK,GAAA,CAAAP,GAAA,CAAAhD,GAAA,QAAAE,GAAA;MACA,IAAAsD,QAAA;MACAA,QAAA,CAAAxD,GAAA,GAAAiD,CAAA,GAAAC,IAAA,CAAAK,GAAA,CAAAF,KAAA;MACAG,QAAA,CAAAvD,GAAA,GAAAgD,CAAA,GAAAC,IAAA,CAAAE,GAAA,CAAAC,KAAA;MACA,OAAAG,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}